{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JellyBoolean"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/open_jellycore\/jellyboolean"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyAny","doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyPrimitiveType","doc:\/\/Open-Jellycore\/Se","doc:\/\/Open-Jellycore\/SE","doc:\/\/Open-Jellycore\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"This type is just a basic Boolean value. It takes either a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" or "},{"type":"codeVoice","code":"String"},{"type":"text","text":" as input. If it takes a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" it will attempt to create a boolean based off of the "},{"type":"codeVoice","code":"String"},{"type":"text","text":" content."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values that can be converted into a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" "},{"type":"text","text":"True Values - off, false, 0"},{"type":"text","text":" "},{"type":"text","text":"False Values - on, true, 1"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JellyBoolean"}],"title":"JellyBoolean","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:14Open_Jellycore12JellyBooleanV","modules":[{"name":"Open-Jellycore"}],"navigatorTitle":[{"kind":"identifier","text":"JellyBoolean"}]},"hierarchy":{"paths":[["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore"]]},"topicSections":[{"title":"Initializers","identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/init(_:)-2iglh","doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/init(_:)-wxrl","doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/init(_:scopedVariables:)","doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/init(from:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/value","doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/variable"]},{"title":"Type Aliases","identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/T"]},{"title":"Type Methods","identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/bool(input:)"]}],"references":{"doc://Open-Jellycore/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/Open-Jellycore\/Se"},"doc://Open-Jellycore/documentation/Open_Jellycore/CoreNode":{"role":"symbol","title":"CoreNode","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"CoreNode"}],"abstract":[{"type":"text","text":"A protocol that defines what makes up the core pieces of a node used by the compiler. This is used to generalize functions across the compiler and allow for a large expansion on node types."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/CoreNode","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CoreNode"}],"url":"\/documentation\/open_jellycore\/corenode"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean/variable":{"role":"symbol","title":"variable","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"variable"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"JellyVariableReference","preciseIdentifier":"s:14Open_Jellycore22JellyVariableReferenceV"},{"kind":"text","text":"?"}],"abstract":[{"type":"text","text":"The variable that the primitive type may by pointing too. If this variable is present, it will be encoded instead of "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/value"},{"type":"text","text":"."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/variable","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/jellyboolean\/variable"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean":{"role":"symbol","title":"JellyBoolean","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JellyBoolean"}],"abstract":[{"type":"text","text":"This type is just a basic Boolean value. It takes either a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" or "},{"type":"codeVoice","code":"String"},{"type":"text","text":" as input. If it takes a "},{"type":"codeVoice","code":"String"},{"type":"text","text":" it will attempt to create a boolean based off of the "},{"type":"codeVoice","code":"String"},{"type":"text","text":" content."},{"type":"text","text":" "},{"type":"text","text":"The "},{"type":"codeVoice","code":"String"},{"type":"text","text":" values that can be converted into a "},{"type":"codeVoice","code":"Bool"},{"type":"text","text":" "},{"type":"text","text":"True Values - off, false, 0"},{"type":"text","text":" "},{"type":"text","text":"False Values - on, true, 1"}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JellyBoolean"}],"url":"\/documentation\/open_jellycore\/jellyboolean"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean/value":{"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"The value for a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean"},{"type":"text","text":" which is just a Swift boolean."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/value","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/jellyboolean\/value"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean/init(_:scopedVariables:)":{"role":"symbol","title":"init(_:scopedVariables:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"?("},{"kind":"typeIdentifier","text":"CoreNode","preciseIdentifier":"s:14Open_Jellycore8CoreNodeP"},{"kind":"text","text":", "},{"kind":"externalParam","text":"scopedVariables"},{"kind":"text","text":": ["},{"kind":"typeIdentifier","text":"Variable","preciseIdentifier":"s:14Open_Jellycore8VariableC"},{"kind":"text","text":"])"}],"abstract":[{"type":"text","text":"This initializer creates a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean"},{"type":"text","text":" type taking in a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/CoreNode"},{"type":"text","text":" and the scopeâ€™s variables."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/init(_:scopedVariables:)","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/jellyboolean\/init(_:scopedvariables:)"},"doc://Open-Jellycore/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/Open-Jellycore\/SE"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyArray":{"role":"symbol","title":"JellyArray","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"JellyArray"}],"abstract":[{"type":"text","text":"An array type that allows for any value conforming to "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyAny"},{"type":"text","text":" to be placed in an Array of values."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyArray","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JellyArray"}],"url":"\/documentation\/open_jellycore\/jellyarray"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean/bool(input:)":{"role":"symbol","title":"bool(input:)","fragments":[{"kind":"keyword","text":"static"},{"kind":"text","text":" "},{"kind":"keyword","text":"func"},{"kind":"text","text":" "},{"kind":"identifier","text":"bool"},{"kind":"text","text":"("},{"kind":"externalParam","text":"input"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"},{"kind":"text","text":" -> "},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"}],"abstract":[{"type":"text","text":"A function that takes in a string value and attempts to convert it into a boolean."},{"type":"text","text":" "},{"type":"text","text":"If the string is not in any valid string description of a boolean, the function throws."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/bool(input:)","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/jellyboolean\/bool(input:)"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean/init(_:)-2iglh":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"Bool","preciseIdentifier":"s:Sb"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"The default initializer for a "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean"},{"type":"text","text":" which creates itself using a boolean value."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/init(_:)-2iglh","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/jellyboolean\/init(_:)-2iglh"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyAny":{"role":"symbol","title":"JellyAny","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JellyAny"}],"abstract":[{"type":"codeVoice","code":"JellyAny"},{"type":"text","text":" is a protocol that allows types like "},{"type":"reference","isActive":true,"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyArray"},{"type":"text","text":" to function."},{"type":"text","text":" "},{"type":"text","text":"It allows Jelly types to be put into arrays or other structures and still be interacted with."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyAny","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JellyAny"}],"url":"\/documentation\/open_jellycore\/jellyany"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean/init(_:)-wxrl":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"typeIdentifier","text":"String","preciseIdentifier":"s:SS"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"An initializer that attempts to convert a string into a boolean."},{"type":"text","text":" "},{"type":"text","text":"If this is unsuccessful, the function will throw an error."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/init(_:)-wxrl","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/jellyboolean\/init(_:)-wxrl"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyPrimitiveType":{"role":"symbol","title":"JellyPrimitiveType","fragments":[{"kind":"keyword","text":"protocol"},{"kind":"text","text":" "},{"kind":"identifier","text":"JellyPrimitiveType"}],"abstract":[{"type":"text","text":"This protocol is used to declare any of the primitive Jelly types."},{"type":"text","text":" "},{"type":"text","text":"It declares all of the necessary properties for a primitive type to function and encode itself."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyPrimitiveType","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"JellyPrimitiveType"}],"url":"\/documentation\/open_jellycore\/jellyprimitivetype"},"doc://Open-Jellycore/documentation/Open_Jellycore":{"role":"collection","title":"Open-Jellycore","abstract":[],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore"},"doc://Open-Jellycore/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Open-Jellycore\/s8SendableP"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean/init(from:)":{"role":"symbol","title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/init(from:)","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/jellyboolean\/init(from:)"},"doc://Open-Jellycore/documentation/Open_Jellycore/JellyBoolean/T":{"role":"symbol","title":"JellyBoolean.T","fragments":[{"kind":"keyword","text":"typealias"},{"kind":"text","text":" "},{"kind":"identifier","text":"T"}],"abstract":[{"type":"text","text":"Primitive Types need an associated type that is Codable."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/JellyBoolean\/T","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"T"}],"url":"\/documentation\/open_jellycore\/jellyboolean\/t"}}}