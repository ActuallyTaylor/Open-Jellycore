{"primaryContentSections":[{"kind":"declarations","declarations":[{"tokens":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"QuantumValue"}],"languages":["swift"],"platforms":["macOS"]}]}],"schemaVersion":{"major":0,"minor":3,"patch":0},"sections":[],"variants":[{"paths":["\/documentation\/open_jellycore\/quantumvalue"],"traits":[{"interfaceLanguage":"swift"}]}],"relationshipsSections":[{"identifiers":["doc:\/\/Open-Jellycore\/Se","doc:\/\/Open-Jellycore\/SE","doc:\/\/Open-Jellycore\/s8SendableP"],"kind":"relationships","title":"Conforms To","type":"conformsTo"}],"identifier":{"url":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue","interfaceLanguage":"swift"},"abstract":[{"type":"text","text":"A custom class with the purpose  of allowing a swift "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" value to be encoded and decoded. Extremely useful for encoding PLISTs and used all across Jellycore"}],"kind":"symbol","metadata":{"fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"QuantumValue"}],"title":"QuantumValue","roleHeading":"Structure","role":"symbol","symbolKind":"struct","externalID":"s:14Open_Jellycore12QuantumValueV","modules":[{"name":"Open-Jellycore"}],"navigatorTitle":[{"kind":"identifier","text":"QuantumValue"}]},"hierarchy":{"paths":[["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore"]]},"topicSections":[{"title":"Structures","identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/CodingKeys"]},{"title":"Initializers","identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/init(_:)","doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/init(from:)"]},{"title":"Instance Properties","identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/value"]},{"title":"Default Implementations","identifiers":["doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/Encodable-Implementations"],"generated":true}],"references":{"doc://Open-Jellycore/documentation/Open_Jellycore/QuantumValue/init(from:)":{"role":"symbol","title":"init(from:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"externalParam","text":"from"},{"kind":"text","text":": "},{"kind":"typeIdentifier","text":"Decoder","preciseIdentifier":"s:s7DecoderP"},{"kind":"text","text":") "},{"kind":"keyword","text":"throws"}],"abstract":[{"type":"text","text":"Initializes a QuantumValue from a decoder."},{"type":"text","text":" "},{"type":"text","text":"The value is decoded based on what it can possibly decode by doing consecutive if let statements to find the matching type."}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/init(from:)","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/quantumvalue\/init(from:)"},"doc://Open-Jellycore/documentation/Open_Jellycore/QuantumValue/CodingKeys":{"role":"symbol","title":"QuantumValue.CodingKeys","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"CodingKeys"}],"abstract":[],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/CodingKeys","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"CodingKeys"}],"url":"\/documentation\/open_jellycore\/quantumvalue\/codingkeys"},"doc://Open-Jellycore/documentation/Open_Jellycore/QuantumValue/value":{"role":"symbol","title":"value","fragments":[{"kind":"keyword","text":"var"},{"kind":"text","text":" "},{"kind":"identifier","text":"value"},{"kind":"text","text":": "},{"kind":"keyword","text":"Any"}],"abstract":[{"type":"text","text":"The internal "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" value"}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/value","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/quantumvalue\/value"},"doc://Open-Jellycore/Se":{"type":"unresolvable","title":"Swift.Decodable","identifier":"doc:\/\/Open-Jellycore\/Se"},"doc://Open-Jellycore/documentation/Open_Jellycore/QuantumValue/init(_:)":{"role":"symbol","title":"init(_:)","fragments":[{"kind":"identifier","text":"init"},{"kind":"text","text":"("},{"kind":"keyword","text":"Any"},{"kind":"text","text":")"}],"abstract":[{"type":"text","text":"A basic initializer for a Quantum Value"}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/init(_:)","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore\/quantumvalue\/init(_:)"},"doc://Open-Jellycore/documentation/Open_Jellycore/QuantumValue/Encodable-Implementations":{"role":"collectionGroup","title":"Encodable Implementations","abstract":[],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue\/Encodable-Implementations","kind":"article","type":"topic","url":"\/documentation\/open_jellycore\/quantumvalue\/encodable-implementations"},"doc://Open-Jellycore/documentation/Open_Jellycore":{"role":"collection","title":"Open-Jellycore","abstract":[],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore","kind":"symbol","type":"topic","url":"\/documentation\/open_jellycore"},"doc://Open-Jellycore/documentation/Open_Jellycore/QuantumValue":{"role":"symbol","title":"QuantumValue","fragments":[{"kind":"keyword","text":"struct"},{"kind":"text","text":" "},{"kind":"identifier","text":"QuantumValue"}],"abstract":[{"type":"text","text":"A custom class with the purpose  of allowing a swift "},{"type":"codeVoice","code":"Any"},{"type":"text","text":" value to be encoded and decoded. Extremely useful for encoding PLISTs and used all across Jellycore"}],"identifier":"doc:\/\/Open-Jellycore\/documentation\/Open_Jellycore\/QuantumValue","kind":"symbol","type":"topic","navigatorTitle":[{"kind":"identifier","text":"QuantumValue"}],"url":"\/documentation\/open_jellycore\/quantumvalue"},"doc://Open-Jellycore/s8SendableP":{"type":"unresolvable","title":"Swift.Sendable","identifier":"doc:\/\/Open-Jellycore\/s8SendableP"},"doc://Open-Jellycore/SE":{"type":"unresolvable","title":"Swift.Encodable","identifier":"doc:\/\/Open-Jellycore\/SE"}}}