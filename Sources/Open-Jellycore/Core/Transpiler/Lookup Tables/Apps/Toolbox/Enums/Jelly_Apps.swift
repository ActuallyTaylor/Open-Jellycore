//
//  Jelly_Apps.swift
//  Open-Jellycore
//
//  Created by Taylor Lineman on 6/02/23.
//

enum Jelly_Apps: String, JellyEnum, Codable {
	case Airmail
	case Apollo
	case Bear
	case Cardhop
	case CarrotWeather
	case Draftsfour
	case Draftsfive
	case Fantastical
	case GoogleMaps
	case Jayson
	case LaunchCenterPro
	case Omnifocus
	case Reddit
	case Spark
	case Spotify
	case Todoist
	case Things
	case Twitter
	case WhatsApp
	case Instagram
	case Facebook
	case Snapchat
	case Netflix
	case Amazon
	case AmazonPrime
	case Dropbox
	case DuckDuckGo
	case Google
	case GMail
	case Chrome
	case GoodReads
	case GoogleAssistant
	case Alexa
	case GoogleDocs
	case GoogleCalendar
	case GoogleDrive
	case GooglePhotos
	case GoogleSheets
	case GoogleTranslate
	case HalideCamera
	case HBOGo
	case Hulu
	case IMDB
	case LastPass
	case Messenger
	case PayPal
	case Pinterest
	case Signal
	case Telegram
	case Skype
	case Twitch
	case TweetBot
	case Vimeo
	case YouTube
	case Waze
	case Overcast
	case Castro
	case Ulysses
	case DayOne
	case iCabMobile
	case HBONow
	case Outlook
	case onePassword
	case pdfExpert
	case pcalc
	case byword
	case mindnode
	case scriptable
	case weatherline
	case healthmate
	case citymapper
	case devonthink
	case audible
	case documents
	case darksky
	case calendars
	case workingCopy

    init?(_ value: CoreNode, scopedVariables: [Variable]) {
        self.init(rawValue: value.content)
    }

    var value: String {
        switch self {
		case .Airmail:
			return "Airmail"
		case .Apollo:
			return "Apollo"
		case .Bear:
			return "Bear"
		case .Cardhop:
			return "Cardhop"
		case .CarrotWeather:
			return "CarrotWeather"
		case .Draftsfour:
			return "Drafts4"
		case .Draftsfive:
			return "Drafts5"
		case .Fantastical:
			return "Fantastical"
		case .GoogleMaps:
			return "GoogleMaps"
		case .Jayson:
			return "Jayson"
		case .LaunchCenterPro:
			return "LaunchCenterPro"
		case .Omnifocus:
			return "Omnifocus"
		case .Reddit:
			return "Reddit"
		case .Spark:
			return "Spark"
		case .Spotify:
			return "Spotify"
		case .Todoist:
			return "Todoist"
		case .Things:
			return "Things"
		case .Twitter:
			return "Twitter"
		case .WhatsApp:
			return "WhatsApp"
		case .Instagram:
			return "Instagram"
		case .Facebook:
			return "Facebook"
		case .Snapchat:
			return "Snapchat"
		case .Netflix:
			return "Netflix"
		case .Amazon:
			return "Amazon"
		case .AmazonPrime:
			return "AmazonPrime"
		case .Dropbox:
			return "Dropbox"
		case .DuckDuckGo:
			return "DuckDuckGo"
		case .Google:
			return "Google"
		case .GMail:
			return "GMail"
		case .Chrome:
			return "Chrome"
		case .GoodReads:
			return "GoodReads"
		case .GoogleAssistant:
			return "GoogleAssistant"
		case .Alexa:
			return "Alexa"
		case .GoogleDocs:
			return "GoogleDocs"
		case .GoogleCalendar:
			return "GoogleCalendar"
		case .GoogleDrive:
			return "GoogleDrive"
		case .GooglePhotos:
			return "GooglePhotos"
		case .GoogleSheets:
			return "GoogleSheets"
		case .GoogleTranslate:
			return "GoogleTranslate"
		case .HalideCamera:
			return "HalideCamera"
		case .HBOGo:
			return "HBOGo"
		case .Hulu:
			return "Hulu"
		case .IMDB:
			return "IMDB"
		case .LastPass:
			return "LastPass"
		case .Messenger:
			return "Messenger"
		case .PayPal:
			return "PayPal"
		case .Pinterest:
			return "Pinterest"
		case .Signal:
			return "Signal"
		case .Telegram:
			return "Telegram"
		case .Skype:
			return "Skype"
		case .Twitch:
			return "Twitch"
		case .TweetBot:
			return "TweetBot"
		case .Vimeo:
			return "Vimeo"
		case .YouTube:
			return "YouTube"
		case .Waze:
			return "Waze"
		case .Overcast:
			return "Overcast"
		case .Castro:
			return "Castro"
		case .Ulysses:
			return "Ulysses"
		case .DayOne:
			return "DayOne"
		case .iCabMobile:
			return "iCabMobile"
		case .HBONow:
			return "HBONow"
		case .Outlook:
			return "Outlook"
		case .onePassword:
			return "onePassword"
		case .pdfExpert:
			return "pdfExpert"
		case .pcalc:
			return "pcalc"
		case .byword:
			return "byword"
		case .mindnode:
			return "mindnode"
		case .scriptable:
			return "scriptable"
		case .weatherline:
			return "weatherline"
		case .healthmate:
			return "healthmate"
		case .citymapper:
			return "citymapper"
		case .devonthink:
			return "devonthink"
		case .audible:
			return "audible"
		case .documents:
			return "documents"
		case .darksky:
			return "darksky"
		case .calendars:
			return "calendars"
		case .workingCopy:
			return "workingCopy"

        }
    }
}

extension Jelly_Apps {
    func encode(to encoder: Encoder) throws {
        var container = encoder.singleValueContainer()
        try container.encode(value)
    }
}
